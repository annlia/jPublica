sizeN <- 50
ttBoot <- rep(NA, bootN)
ttTrial <- rep(NA, trialN)
shape <- "norm"
for (i in 1:trialN){
z <- rnorm(sizeN, sd=2)
if(shape=="lognorm") y<-exp(z) else y<-z
for (j in 1:bootN){
x <- sample(1:sizeN, sizeN/2)
y_trt <- y[x]
y_ctrl <- y[-x]
ttBoot[j] <- t.test(y_trt, y_ctrl, var.equal=TRUE)$p.value
}
ttTrial[i] <- sum(ttBoot < 0.05)/bootN
}
typeIavg <- sum(ttTrial>.05)/trialN
cat(typeIavg, sep="\n")
}
for (k in 1:50){
bootN <- 2000
trialN <- 100
sizeN <- 50
ttBoot <- rep(NA, bootN)
ttTrial <- rep(NA, trialN)
shape <- "norm"
for (i in 1:trialN){
z <- rnorm(sizeN, sd=.5)
if(shape=="lognorm") y<-exp(z) else y<-z
for (j in 1:bootN){
x <- sample(1:sizeN, sizeN/2)
y_trt <- y[x]
y_ctrl <- y[-x]
ttBoot[j] <- t.test(y_trt, y_ctrl, var.equal=TRUE)$p.value
}
ttTrial[i] <- sum(ttBoot < 0.05)/bootN
}
typeIavg <- sum(ttTrial>.05)/trialN
cat(typeIavg, sep="\n")
}
for (k in 1:50){
bootN <- 2000
trialN <- 100
sizeN <- 50
ttBoot <- rep(NA, bootN)
ttTrial <- rep(NA, trialN)
shape <- "norm"
for (i in 1:trialN){
z <- rnorm(sizeN, sd=.1)
if(shape=="lognorm") y<-exp(z) else y<-z
for (j in 1:bootN){
x <- sample(1:sizeN, sizeN/2)
y_trt <- y[x]
y_ctrl <- y[-x]
ttBoot[j] <- t.test(y_trt, y_ctrl, var.equal=TRUE)$p.value
}
ttTrial[i] <- sum(ttBoot < 0.05)/bootN
}
typeIavg <- sum(ttTrial>.05)/trialN
cat(typeIavg, sep="\n")
}
5/6
installed.packages(haven)
installed.packages("haven")
library(haven)
hivsetpract <- read_dta("~/jData/jDoctrina/2018EPI_Wengen/CausalInference/data/hivsetpract.dta")
View(hivsetpract)
256*52/(128*564)
256*180/(820*128)
(8+216/9)/64
216/9
216/720
48/80
library(haven)
dataset <- read_sav(NULL)
View(dataset)
library(haven)
hivsetpract <- read_dta("~/jData/jBibliotheca/2018_EPIwengen/CausalInference/data/hivsetpract.dta")
View(hivsetpract)
View(hivsetpract)
library(dplyr)
View(hivsetpract)
hivsetpract %>% arrange(id)
hivsetpract %<>% arrange(id)
library(tidyr)
hivsetpract %<>% arrange(id)
library(dplyr)
library(magrittr)
hivsetpract <- read_dta("~/jData/jBibliotheca/2018_EPIwengen/CausalInference/data/hivsetpract.dta")
hivsetpract %<>% arrange(id)
hivsetpract %<>% arrange(id, month)
summary(hivsetpract)
hivsetpract %>% filter(id %in% c(95001, 95002))
View(hivsetpract)
ggplot(subset(hivsetpract, id %in% c(95001, 95002)),
aes(x=month,
y=cd4_0,
color=id))+
geom_point()
library(ggplot2)
ggplot(subset(hivsetpract, id %in% c(95001, 95002)),
aes(x=month,
y=cd4_0,
color=id))+
geom_point()
ggplot(subset(hivsetpract, id %in% c(95001, 95002)),
aes(x=month,
y=cd4_v,
color=id))+
geom_point()
ggplot(subset(hivsetpract, id %in% c(95001, 95002)),
aes(x=month,
y=cd4_v,
color=as.factor(id)))+
geom_point()
ggplot(subset(hivsetpract, id %in% c(95001, 95002)),
aes(x=month,
y=cd4_v,
color=as.factor(id)))+
geom_point() + labs(col="id")
hivsetpract %>% unique(cd4_0)
?unique
library(data.table)
hivsetpract %>% unique(cd4_0)
?unique
hivsetpract %>% unique(by=cd4_0)
hivsetpract %>% ungroup() %>% unique(by=cd4_0)
hivsetpract %>% data.table() %>% unique(by=cd4_0)
hivsetpract %>% data.table() %>% unique(by=cd4_0_cat)
hivsetpract %>% unique(by=cd4_0_cat)
hivsetpract %>% data.table() %>% unique(by=cd4_0_cat)
hivsetpract %>% data.table() %>% View()
hivsetpract %>% unique(by="cd4_0")
hivsetpract %>% unique(by="cd4_0_cat")
hivsetpract %>% data.table() %>% unique(by="cd4_0_cat")
hivsetpract %>% select(cd4_0, cd4_0_cat) %>% ungroup() %>% unique(by="cd4_0_cat")
hivsetpract %>% select(cd4_0, cd4_0_cat) %>% data.table() %>% unique(by="cd4_0_cat")
hivsetpract %>% select(cd4_0, cd4_0_cat) %>% data.table() %>% arrange(cd4_0_cat) %>% unique(by="cd4_0_cat")
hivsetpract %>% select(cd4_0, cd4_0_cat) %>% data.table() %>% arrange(cd4_0_cat) %>% unique(by="cd4_0_cat")
hivsetpract %>% select(cd4_0, cd4_0_cat) %>% arrange(cd4_0_cat) %>%
data.table() %>% unique(by="cd4_0_cat")
hivsetpract %>% select(cd4_0, cd4_0_cat) %>% group_by(cd4_0_cat) %>% summarise()
hivsetpract %>% select(cd4_0, cd4_0_cat) %>% group_by(cd4_0_cat) %>% summarise_all()
hivsetpract %>% select(cd4_0, cd4_0_cat) %>% summarise_all()
hivsetpract %>% select(cd4_0, cd4_0_cat) %>% summarise()
hivsetpract %>% select(cd4_0, cd4_0_cat) %>% group_by(cd4_0_cat) %>% summarise(range)
?summarise
hivsetpract %>% select(cd4_0, cd4_0_cat) %>% group_by(cd4_0_cat) %>% summarise(min, max)
hivsetpract %>% select(cd4_0, cd4_0_cat) %>% group_by(cd4_0_cat) %>% summarise(min(), max())
min(hivsetpract$cd4_0)
max(hivsetpract$cd4_0)
hivsetpract %>% select(cd4_0, cd4_0_cat) %>% group_by(cd4_0_cat) %>%
summarise(ll = min(cd4_0),
ul = max(cd4_0))
hivsetpract %>% select(cd4_0, cd4_0_cat) %>% group_by(cd4_0_cat) %>%
summarise_all(min(), max())
hivsetpract %>% select(cd4_0, cd4_0_cat) %>% group_by(cd4_0_cat) %>%
summarise(ll = min(cd4_0),
ul = max(cd4_0))
library(survival)
?coxph
coxph(Surv(month, death))
coxph(Surv(month, death) ~ art, hivsetpract)
hivsetpract %<>% mutate(monthCox = month+1)
coxph(Surv(monthCox, death) ~ art, hivsetpract)
hivsetpract %<>% group_by(id) %>% filter(max(month)) %>% ungroup()
hivsetpract %<>% group_by(id) %>% arrange(month) %>% slice(n()) %>% ungroup()
coxph(Surv(month, death) ~ art, hivsetpract)
coxph(Surv(monthCox, death) ~ art, hivsetpract)
names(hivsetpract)
5785+772
exp(-1.380)
1/exp(-1.380)
?coxph
?Surv
coxph(Surv(time=month, event=death) ~ art, hivsetpract)
View(hivsetpract)
coxph(Surv(monthCox, death) ~ as.factor(art), hivsetpract)
class(hivsetpract$art)
coxph(Surv(monthCox, death) ~ factor(art), hivsetpract)
hivsetpract <- read_dta("~/jData/jBibliotheca/2018_EPIwengen/CausalInference/data/hivsetpract.dta")
hivsetpract %<>% arrange(id, month)
hivsetpract %>% filter(id %in% c(95001, 95002))
hivsetpract %>% select(cd4_0, cd4_0_cat) %>% group_by(cd4_0_cat) %>%
summarise(ll = min(cd4_0),
ul = max(cd4_0))
ggplot(subset(hivsetpract, id %in% c(95001, 95002)),
aes(x=month,
y=cd4_v,
color=as.factor(id)))+
geom_point() + labs(col="id")
hivsetpract %<>% mutate(monthCox = month+1)
### Select the last record of each id
hivsetpract %<>% group_by(id) %>% arrange(month) %>% slice(n()) %>% ungroup()
hivsetpract <- read_dta("~/jData/jBibliotheca/2018_EPIwengen/CausalInference/data/hivsetpract.dta")
hivsetpract %<>% arrange(id, month)
hivsetpract %>% filter(id %in% c(95001, 95002))
hivsetpract %>% select(cd4_0, cd4_0_cat) %>% group_by(cd4_0_cat) %>%
summarise(ll = min(cd4_0),
ul = max(cd4_0))
ggplot(subset(hivsetpract, id %in% c(95001, 95002)),
aes(x=month,
y=cd4_v,
color=as.factor(id)))+
geom_point() + labs(col="id")
hivsetpract %<>% mutate(monthCox = month+1)
coxph(Surv(time=month, event=death) ~ art + cluster(id), hivsetpract)
hivsetpract %<>% group_by(id) %>% arrange(month) %>% slice(n()) %>% ungroup()
### It seems to give rather different estimates than stata
coxph(Surv(time=month, event=death) ~ art, hivsetpract)
coxph(Surv(time=month, event=death) ~ art + cluster(id), hivsetpract)
View(hivsetpract)
q()
q()
10*10*10
q()
q()
1728/2
1728/4
1728/8
1728/18
1728/16
1728/32
1728/64
75*3
340*2
240*2
250*2
n <- 1000
triangle <- c(0, choose(n,0:n), 0)/2^n
triangleData <- data.frame(id = 1:length(triangle)-n/2, triProb=triangle)
ggplot(data=triangleData, aes(x=id, y=triProb)) +
geom_line(colour="blue") +
geom_point(colour="purple") +
labs(y="Proabbility", x="Index")
library(ggplot2)
n <- 1000
triangle <- c(0, choose(n,0:n), 0)/2^n
triangleData <- data.frame(id = 1:length(triangle)-n/2, triProb=triangle)
ggplot(data=triangleData, aes(x=id, y=triProb)) +
geom_line(colour="blue") +
geom_point(colour="purple") +
labs(y="Proabbility", x="Index")
delta     <- 0.01
quantiles <- 10
z.df     <- data.frame(x = seq(from=-3, to=3, by=delta))
z.df$pdf <- dnorm(z.df$x)
z.df$qt  <- cut(pnorm(z.df$x),breaks=c(0, .05, .95, 1),labels=F)
z.df$qt  <- ifelse(pnorm(z.df$x)>.05 & pnorm(z.df$x)<.95, 2, 1)
library(ggplot2)
ggplot(z.df,aes(x=x,y=pdf))+
geom_ribbon(aes(x=x,ymin=0, ymax=pdf,group=qt,fill=qt), color="black") +
scale_fill_gradient2(midpoint=median(unique(z.df$qt), low=muted("white")), guide="none") +
theme_bw()
### https://stackoverflow.com/questions/27189453/shade-fill-or-color-area-under-density-curve-by-quantile
####################################################################
delta     <- 0.001
quantiles <- 10
z.df     <- data.frame(x = seq(from=-3, to=3, by=delta))
z.df$pdf <- dnorm(z.df$x)
z.df$qt  <- cut(pnorm(z.df$x),breaks=quantiles,labels=F)
## z.df$qt  <- ifelse(pnorm(z.df$x)>.05 & pnorm(z.df$x)<.95, 2, 1)
library(ggplot2)
ggplot(z.df,aes(x=x,y=pdf))+
geom_area(aes(x=x,y=pdf,group=qt,fill=qt),color="black")+
scale_fill_gradient2(midpoint=median(unique(z.df$qt)), guide="none") +
theme_bw()
?require
q()
q()
q()
slidify("CentralLimitTheorem_Lecture.Rmd")
setwd("~/jData/jLabor/juicy_tex/journalClub/201810_DAGsCausalInference")
slidify("CentralLimitTheorem_Lecture.Rmd")
library('knitr')
library('slidify')
slidify("CentralLimitTheorem_Lecture.Rmd")
slidify("CentralLimitTheorem_Lecture.Rmd")
slidify("CentralLimitTheorem_Lecture.Rmd")
slidify("CentralLimitTheorem_Lecture.Rmd")
slidify("CentralLimitTheorem_Lecture.Rmd")
slidify("CentralLimitTheorem_Lecture.Rmd")
slidify("CentralLimitTheorem_Lecture.Rmd")
slidify("CentralLimitTheorem_Lecture.Rmd")
slidify("CentralLimitTheorem_Lecture.Rmd")
slidify("CentralLimitTheorem_Lecture.Rmd")
slidify("CentralLimitTheorem_Lecture.Rmd")
slidify("CentralLimitTheorem_Lecture.Rmd")
slidify("CentralLimitTheorem_Lecture.Rmd")
slidify("CentralLimitTheorem_Lecture.Rmd")
slidify("CentralLimitTheorem_Lecture.Rmd")
slidify("CentralLimitTheorem_Lecture.Rmd")
slidify("CentralLimitTheorem_Lecture.Rmd")
slidify("CentralLimitTheorem_Lecture.Rmd")
slidify("CentralLimitTheorem_Lecture.Rmd")
slidify("CentralLimitTheorem_Lecture.Rmd")
slidify("CentralLimitTheorem_Lecture.Rmd")
slidify("CentralLimitTheorem_Lecture.Rmd")
slidify("CentralLimitTheorem_Lecture.Rmd")
slidify("CentralLimitTheorem_Lecture.Rmd")
warnings()
slidify("CentralLimitTheorem_Lecture.Rmd")
slidify("CentralLimitTheorem_Lecture.Rmd")
slidify("CentralLimitTheorem_Lecture.Rmd")
slidify("CentralLimitTheorem_Lecture.Rmd")
slidify("CentralLimitTheorem_Lecture.Rmd")
slidify("CentralLimitTheorem_Lecture.Rmd")
slidify("CentralLimitTheorem_Lecture.Rmd")
?stat_function
?stat_function
slidify("CentralLimitTheorem_Lecture.Rmd")
slidify("CentralLimitTheorem_Lecture.Rmd")
slidify("CentralLimitTheorem_Lecture.Rmd")
slidify("CentralLimitTheorem_Lecture.Rmd")
slidify("CentralLimitTheorem_Lecture.Rmd")
slidify("CentralLimitTheorem_Lecture.Rmd")
slidify("CentralLimitTheorem_Lecture.Rmd")
slidify("CentralLimitTheorem_Lecture.Rmd")
slidify("CentralLimitTheorem_Lecture.Rmd")
slidify("CentralLimitTheorem_Lecture.Rmd")
slidify("CentralLimitTheorem_Lecture.Rmd")
slidify("CentralLimitTheorem_Lecture.Rmd")
slidify("CentralLimitTheorem_Lecture.Rmd")
slidify("CentralLimitTheorem_Lecture.Rmd")
slidify("CentralLimitTheorem_Lecture.Rmd")
slidify("CentralLimitTheorem_Lecture.Rmd")
slidify("CentralLimitTheorem_Lecture.Rmd")
slidify("CentralLimitTheorem_Lecture.Rmd")
slidify("CentralLimitTheorem_Lecture.Rmd")
slidify("CentralLimitTheorem_Lecture.Rmd")
slidify("CentralLimitTheorem_Lecture.Rmd")
slidify("CentralLimitTheorem_Lecture.Rmd")
plotCTL(smalln, bigN, rdist="rcauchy")
set.seed(17)
x_bar <- NULL
for(j in 1:bigN){
x_sample <- rcauchy = rcauchy(n)
x_bar[j] <- mean(x_sample)
}
set.seed(17)
x_bar <- NULL
for(j in 1:bigN){
x_sample <- rcauchy = rcauchy(smalln)
x_bar[j] <- mean(x_sample)
}
smalln <- 100
bigN <- 100
set.seed(17)
x_bar <- NULL
for(j in 1:bigN){
x_sample <- rcauchy = rcauchy(smalln)
x_bar[j] <- mean(x_sample)
}
set.seed(17)
x_bar <- NULL
for(j in 1:bigN){
x_sample <- rcauchy(smalln)
x_bar[j] <- mean(x_sample)
}
dat <- data.frame(x=x_sample, x_bar=x_bar)
# Histogram overlaid with kernel density curve
h1 <- ggplot(dat, aes(x=x)) +
geom_histogram(aes(y=..density..),      # Histogram with density instead of count on y-axis
colour="dodgerblue", fill="white")
if(rdist %in% c("runif", "rexp", "rcauchy")){
h1 <- h1 +
geom_density(alpha=.3, colour="darkorange", fill="darkorange")  # Overlay with transparent density plot
}
set.seed(17)
x_bar <- NULL
for(j in 1:bigN){
x_sample <- rcauchy(smalln)
x_bar[j] <- mean(x_sample)
}
dat <- data.frame(x=x_sample, x_bar=x_bar)
# Histogram overlaid with kernel density curve
h1 <- ggplot(dat, aes(x=x)) +
geom_histogram(aes(y=..density..),      # Histogram with density instead of count on y-axis
colour="dodgerblue", fill="white") +
geom_density(alpha=.3, colour="darkorange", fill="darkorange")
h2 <- ggplot(dat, aes(x=x_bar)) +
geom_histogram(aes(y=..density..),      # Histogram with density instead of count on y-axis
colour="dodgerblue", fill="white") +
geom_density(alpha=.3, colour="darkorchid4", fill="darkorchid4")  # Overlay with transparent density plot
xn <- seq(min(x_bar), max(x_bar), length.out = 100)
df <- with(dat, data.frame(xn=xn, y = dnorm(xn, mean(x_bar), sd(x_bar))))
h2 <- h2 + geom_line(data = df, aes(x = xn, y = y), color = "red")
grid.arrange(h1, h2, ncol = 1)
plotCTL(smalln, bigN, rdist="rcauchy")
set.seed(23)
x_bar <- NULL
for(j in 1:bigN){
x_sample <- rcauchy(smalln)
x_bar[j] <- mean(x_sample)
}
dat <- data.frame(x=x_sample, x_bar=x_bar)
# Histogram overlaid with kernel density curve
h1 <- ggplot(dat, aes(x=x)) +
geom_histogram(aes(y=..density..),      # Histogram with density instead of count on y-axis
colour="dodgerblue", fill="white") +
geom_density(alpha=.3, colour="darkorange", fill="darkorange")  # Overlay with transparent density plot
h2 <- ggplot(dat, aes(x=x_bar)) +
geom_histogram(aes(y=..density..),      # Histogram with density instead of count on y-axis
colour="dodgerblue", fill="white") +
geom_density(alpha=.3, colour="darkorchid4", fill="darkorchid4")  # Overlay with transparent density plot
xn <- seq(min(x_bar), max(x_bar), length.out = 100)
df <- with(dat, data.frame(xn=xn, y = dnorm(xn, mean(x_bar), sd(x_bar))))
h2 <- h2 + geom_line(data = df, aes(x = xn, y = y), color = "red")
grid.arrange(h1, h2, ncol = 1)
set.seed(37)
x_bar <- NULL
for(j in 1:bigN){
x_sample <- rcauchy(smalln)
x_bar[j] <- mean(x_sample)
}
dat <- data.frame(x=x_sample, x_bar=x_bar)
# Histogram overlaid with kernel density curve
h1 <- ggplot(dat, aes(x=x)) +
geom_histogram(aes(y=..density..),      # Histogram with density instead of count on y-axis
colour="dodgerblue", fill="white") +
geom_density(alpha=.3, colour="darkorange", fill="darkorange")  # Overlay with transparent density plot
h2 <- ggplot(dat, aes(x=x_bar)) +
geom_histogram(aes(y=..density..),      # Histogram with density instead of count on y-axis
colour="dodgerblue", fill="white") +
geom_density(alpha=.3, colour="darkorchid4", fill="darkorchid4")  # Overlay with transparent density plot
xn <- seq(min(x_bar), max(x_bar), length.out = 100)
df <- with(dat, data.frame(xn=xn, y = dnorm(xn, mean(x_bar), sd(x_bar))))
h2 <- h2 + geom_line(data = df, aes(x = xn, y = y), color = "red")
grid.arrange(h1, h2, ncol = 1)
q()
file.remove(list.files(pattern=".png"))
setwd("~/jData/jLabor/juicy_tex/journalClub/201810_DAGsCausalInference")
setwd("~/jData/jLabor/juicy_tex/journalClub/201810_DAGsCausalInference/gifAnimation")
file.remove(list.files(pattern=".png"))
for (rdist in c("runif", "rexp", "rpois", "rbinom"))
{
n <- 300
bigN <-300
x_bar <- NULL
for(j in 1:bigN){
x_sample <- switch(rdist,
runif = runif(n),
rexp = rexp(n),
rbinom = rbinom(n, 1, 1/2),
rpois = rpois(n, 1),
rcauchy = rcauchy(n))
x_bar[j] <- mean(x_sample)
dat <- data.frame(x_bar=x_bar)
x_var <- switch(rdist,
runif = 1/12,
rexp = 1,
rbinom = 1/4,
rpois = 1)
x_se <- sqrt(x_var)/sqrt(n)
x_mean <- switch(rdist,
runif = 1/2,
rexp = 1,
rbinom = 1/2,
rpois = 1)
h2 <- ggplot(dat, aes(x=x_bar)) +
xlim(x_mean-2.5*x_se, x_mean+2.5*x_se) +
xlab(TeX('$\\bar{X}$')) +
geom_histogram(aes(y=..density..),      # Histogram with density instead of count on y-axis
colour="dodgerblue", fill="white") +
geom_density(alpha=.3, colour="darkorchid4", fill="darkorchid4")  # Overlay with transparent density plot
ggsave(filename = paste0(rdist, sprintf("%03d",j) , '.png'),
plot = h2, device = 'png', width=5, height=3.7)
## https://roh.engineering/post/animating-a-monte-carlo-simulation/
}
system(paste0("convert -delay 30 ", rdist, "*.png ", rdist, "30.gif"))
## system(paste0("convert -delay 40 ", rdist, "*.png ", rdist, "40.gif"))
}
library(latex2exp) ## to use latex expressions in plots
library(ggplot2)
for (rdist in c("runif", "rexp", "rpois", "rbinom"))
{
n <- 300
bigN <-300
x_bar <- NULL
for(j in 1:bigN){
x_sample <- switch(rdist,
runif = runif(n),
rexp = rexp(n),
rbinom = rbinom(n, 1, 1/2),
rpois = rpois(n, 1),
rcauchy = rcauchy(n))
x_bar[j] <- mean(x_sample)
dat <- data.frame(x_bar=x_bar)
x_var <- switch(rdist,
runif = 1/12,
rexp = 1,
rbinom = 1/4,
rpois = 1)
x_se <- sqrt(x_var)/sqrt(n)
x_mean <- switch(rdist,
runif = 1/2,
rexp = 1,
rbinom = 1/2,
rpois = 1)
h2 <- ggplot(dat, aes(x=x_bar)) +
xlim(x_mean-2.5*x_se, x_mean+2.5*x_se) +
xlab(TeX('$\\bar{X}$')) +
geom_histogram(aes(y=..density..),      # Histogram with density instead of count on y-axis
colour="dodgerblue", fill="white") +
geom_density(alpha=.3, colour="darkorchid4", fill="darkorchid4")  # Overlay with transparent density plot
ggsave(filename = paste0(rdist, sprintf("%03d",j) , '.png'),
plot = h2, device = 'png', width=5, height=3.7)
## https://roh.engineering/post/animating-a-monte-carlo-simulation/
}
system(paste0("convert -delay 30 ", rdist, "*.png ", rdist, "30.gif"))
## system(paste0("convert -delay 40 ", rdist, "*.png ", rdist, "40.gif"))
}
q()
